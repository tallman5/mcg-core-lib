name: CD

on:
  release:
    types: [created]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '8.x'

    - name: Extract version from release tag
      id: extract_version
      run: |
        TAG_NAME=${GITHUB_REF##*/}
        if [[ $TAG_NAME =~ ^v([0-9]+)\.([0-9]+)$ ]]; then
          echo "::set-output name=major::${BASH_REMATCH[1]}"
          echo "::set-output name=minor::${BASH_REMATCH[2]}"
        else
          echo "Invalid tag name"
          exit 1
        fi
    
    - name: Get build number
      id: get_build_number
      run: echo "::set-output name=patch::${GITHUB_RUN_NUMBER}"

    - name: Set version
      id: set_version
      run: |
        MAJOR=${{ steps.extract_version.outputs.major }}
        MINOR=${{ steps.extract_version.outputs.minor }}
        PATCH=${{ steps.get_build_number.outputs.patch }}
        VERSION="$MAJOR.$MINOR.$PATCH"
        echo "##[set-env name=VERSION]$VERSION"

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Pack
      run: dotnet pack --configuration Release --no-build --output ./nupkg /p:PackageVersion=${{ env.VERSION }}

    - name: Publish to NuGet
      env:
        NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
      run: dotnet nuget push "./nupkg/*.nupkg" --api-key $NUGET_API_KEY --source https://api.nuget.org/v3/index.json
